all: tag

# Parses the version from the package.json file
VERSION = $(shell cat package.json | grep "version" | sed -e 's/^.*: "\(.*\)".*/\1/')
PWD = $(shell pwd)

DOCKER_REPO = docker.itpservices.be
DOCKER_USER = <%= dockerUser %>
PROJECT_NAME = <%= appName.toLowerCase() %>

TAG_NODE = $(DOCKER_REPO)/$(DOCKER_USER)/$(PROJECT_NAME)-node8-native

DOCKERFILE_NODE = ./docker/node/Dockerfile

NO_CACHE = 1

ifeq ($(NO_CACHE),1)
	BUILD_NO_CACHE = --no-cache
endif

clean:
	-rm -rf node_modules
	-rm -f .build-*

node_modules: package.json
	docker run --rm --volume=$(PWD):/app -w=/app docker.itpservices.be/itp/node-native:8 npm install

dependencies: node_modules

.build-node: $(DOCKERFILE_NODE)
	docker build $(BUILD_NO_CACHE) -f $(DOCKERFILE_NODE) -t $(TAG_NODE) .
	touch .build-node

build: dependencies .build-node

tag: build
	docker tag $(TAG_NODE) $(TAG_NODE):$(VERSION)

push: tag
	docker push $(TAG_NODE):$(VERSION)

push-latest: push
	docker push $(TAG_NODE):latest

test: build
	-docker run --rm --volume=$(PWD):/app $(TAG_NODE) npm run test-jenkins
	-docker run --rm --volume=$(PWD):/app $(TAG_NODE) npm run coverage

lint: node_modules
	-docker run --rm --volume=$(PWD):/app $(TAG_NODE) npm run lint-checkstyle

run: build
	docker-compose -f docker/docker-compose.yml up -d

stop:
	docker-compose -f docker/docker-compose.yml stop
