all: tag

# Parses the version from the package.json file
VERSION = $(shell cat package.json | grep "version" | sed -e 's/^.*: "\(.*\)".*/\1/')
PWD = $(shell pwd)

DOCKER_REPO = eu.gcr.io
DOCKER_USER = itp-gce-registry
PROJECT_NAME = <%= appName.toLowerCase() %>
COMPOSE_PROJECT_NAME = <%= appName.toLowerCase() %>

TAG_NODE = $(DOCKER_REPO)/$(DOCKER_USER)/$(PROJECT_NAME)-node

DOCKERFILE_NODE = ./docker/node/Dockerfile

clean:
	-rm -f .build-*

.build-node: $(DOCKERFILE_NODE)
	docker build -f $(DOCKERFILE_NODE) -t $(TAG_NODE):$(VERSION) .
	touch .build-node

build: .build-node

push:
	docker push $(TAG_NODE):$(VERSION)

tag-latest: build
	docker tag $(TAG_NODE):$(VERSION) $(TAG_NODE):latest

push-latest: tag-latest push
	docker push $(TAG_NODE):latest

test: build
	-docker run --rm --volume=$(PWD):/app $(TAG_NODE):$(VERSION) npm run test-jenkins
	-docker run --rm --volume=$(PWD):/app $(TAG_NODE):$(VERSION) npm run coverage

lint: build
	-docker run --rm --volume=$(PWD):/app $(TAG_NODE):$(VERSION) npm run lint

lint-checkstyle: build
	-docker run --rm --volume=$(PWD):/app $(TAG_NODE):$(VERSION) npm run lint-checkstyle

run: build
	TAG_NODE=$(TAG_NODE) VERSION=$(VERSION) COMPOSE_PROJECT_NAME=$(COMPOSE_PROJECT_NAME) docker-compose -f docker/docker-compose.yml up -d

stop:
	TAG_NODE=$(TAG_NODE) VERSION=$(VERSION) COMPOSE_PROJECT_NAME=$(COMPOSE_PROJECT_NAME) docker-compose -f docker/docker-compose.yml stop
